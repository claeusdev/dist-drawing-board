# docker-compose.prod.yml
version: '3.8'
services:
  haproxy:
    image: haproxy:2.4
    ports:
      - "8000:8000"
      - "8404:8404"
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - websocket1
      - websocket2
      - websocket3
    networks:
      - whiteboard_net

  websocket1:
    image: gcr.io/whiteboard-445202/websocket:latest
    environment:
      - PORT=8081
      - HOST=0.0.0.0
      - METRICS_PORT=9100
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  websocket2:
    image: gcr.io/whiteboard-445202/websocket:latest
    environment:
      - PORT=8082
      - HOST=0.0.0.0
      - METRICS_PORT=9100
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  websocket3:
    image: gcr.io/whiteboard-445202/websocket:latest
    environment:
      - PORT=8083
      - HOST=0.0.0.0
      - METRICS_PORT=9100
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  redis-master:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - whiteboard_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - whiteboard_net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - whiteboard_net

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    command:
      - --kafka.server=kafka:9092
    ports:
      - "9308:9308"
    networks:
      - whiteboard_net

  redis-exporter:
    image: oliver006/redis_exporter:latest
    environment:
      - REDIS_ADDR=redis://redis-master:6379
    ports:
      - "9121:9121"
    networks:
      - whiteboard_net

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prom.yml:/etc/prometheus/prometheus.yml
    networks:
      - whiteboard_net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_PROVISIONING_PATH=/etc/grafana/provisioning
    volumes:
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana-datasources:/etc/grafana/provisioning/datasources
    networks:
      - whiteboard_net

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - whiteboard_net

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./config/promtail.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - whiteboard_net

networks:
  whiteboard_net:
    driver: bridge

volumes:
  redis_data:
  loki_data:
