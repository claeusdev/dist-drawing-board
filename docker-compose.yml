version: '3.8'
services:
  haproxy:
    image: haproxy:2.4
    ports:
      - "8000:8000"
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - websocket1
      - websocket2
      - websocket3
    networks:
      - whiteboard_net

  websocket1:
    build: .
    environment:
      - PORT=8081
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  websocket2:
    build: .
    environment:
      - PORT=8082
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  websocket3:
    build: .
    environment:
      - PORT=8083
      - REDIS_HOST=redis-master
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      redis-master:
        condition: service_started
    networks:
      - whiteboard_net

  redis-master:
      image: redis:latest
      container_name: redis-master  # Explicitly set container name
      ports:
        - "6379:6379"
      networks:
        - whiteboard_net
      volumes:
        - redis_data:/data
      command: redis-server --appendonly yes
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - whiteboard_net
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - whiteboard_net
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prom.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - whiteboard_net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - whiteboard_net

networks:
  whiteboard_net:
    driver: bridge

volumes:
  redis_data:
